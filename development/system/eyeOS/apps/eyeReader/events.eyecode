<?php
/*
                                  ____   _____ 
                                 / __ \ / ____|
                  ___ _   _  ___| |  | | (___  
                 / _ \ | | |/ _ \ |  | |\___ \ 
                |  __/ |_| |  __/ |__| |____) |
                 \___|\__, |\___|\____/|_____/ 
                       __/ |                   
                      |___/              1.6

                     Web Operating System
                           eyeOS.org

             eyeOS Engineering Team - eyeOS.org/whoarewe

     eyeOS is released under the GNU Afero General Public License Version 3 (AGPL3)
            provided with this release in license.txt
             or via web at gnu.org/licenses/gpl.txt

        Copyright 2005-2008 eyeOS Team (team@eyeos.org)         
*/

//proc('launch', array('eyeReader', array('app'=>'$AppName')))

function eyeReader_getVer($params=null){
	global $currentUser;
	
	if($_SESSION['lang'])$lang = $_SESSION['lang']; else $lang = 'en';

	return $lang;
}

function eyeReader_on_Message($params=null) {
	reqLib('eyeWidgets','updateContent',$params);
}

function eyeReader_on_goto($params=null) {
	global $myPid,$checknum;
	global $currentUser;
	if ($_SESSION['lang'])$lang = $_SESSION['lang']; else $lang = 'en';
	$ver = eyeReader_getVer();

	$tree = "filesTree";

	if($params[0]){
		$open = str_replace('..','.',$params[0]);
	}else{
		$open = $params[$tree][0];
		if(strpos($open,'>') || strpos($open,'<'))return;
		if($tree=="appsTree"){
			if(strpos($open,'/')!=strlen($open)-1)
				$open = strstr($open,'/');
				else return;
		}
		$open = $ver.'/'.$open;
	}

	if($open){
		$myDir = EYE_ROOT.'/'.APP_DIR.'/'.SHARE_USER_DIR.'/eyeReader/'.$open;
		if($myDir{strlen($myDir)-1}!='/')$myDir = $myDir.'/';

		$oldUser = $currentUser;
		$currentUser = ROOTUSER;
		$myInfoFile = $myDir.'info.xml';
		$size = service('vfs','real_filesize',array($myInfoFile));
		if ($size > 0) {
			$fp = service('vfs','real_open',array($myInfoFile,'r'));
			$InfoContent = fread($fp,$size);
			fclose($fp);
		}
		$currentUser = $oldUser;
	
		$info = eyeXML('xml2array',array($InfoContent));
		$info = $info['eyeReader'][0];

		$oldUser = $currentUser;
		$currentUser = ROOTUSER;
		$myIndexFile = $myDir.'index.eyeReader';
		$size = service('vfs','real_filesize',array($myIndexFile));
		if ($size > 0) {
			$fp = service('vfs','real_open',array($myIndexFile,'r'));
			$IndexContent = fread($fp,$size);
			fclose($fp);
		}
		$currentUser = $oldUser;

		$title = str_replace(array("\n","\t"),'',$info['title'][0]);
		$myDir2 = substr($myDir,0,strlen($myDir)-1);
		if($title=="")$title = utf8_basename($myDir2);

		$help_text = '<h1>'.$title.'</h1><hr />'.eyeReader_BBCode($IndexContent).'<hr />';

		$author = str_replace(array("\n","\t"),'',$info['author'][0]);
	
		if($author)$help_text .= i18n('translate',array('Author')).': '.$author;
	
		foreach($info['app'] as $value)	{
			if($value) {
				if(!$app){
					$app=1;
					$help_text .= '<br /><br />'.i18n('translate',array('Applications')).':<ul>';
				}
				$help_text .= '<li>'.str_replace(array("\n","\t"," "),'',$value).'</li>';
			}
		}
		if($app)$help_text .= '</ul>';
	
		service('eyex','runjs',array('js' => 'document.getElementById("'.$myPid.'_label1").innerHTML="'.str_replace('"','\\"',$help_text).'";'));
	}
}

function eyeReader_on_home() {
	if ($_SESSION['lang'])$lang = $_SESSION['lang']; else $lang = 'en';
	eyeReader_on_goto(array('Welcome/'.$lang));
}

function eyeReader_on_about() {
	if ($_SESSION['lang'])$lang = $_SESSION['lang']; else $lang = 'en';
	eyeReader_on_goto(array('About/'.$lang));
}


function eyeReader_on_open($param) {
	eyeReader_on_goto(array($param));
}

function eyeReader_on_SendMessage() {
	proc('launch',array('eyeMessages',array('action' => 'new','to' => 'root')));
}

//BBcode 2 HTML was written by WAY2WEB.net (but a lot modified by me :P)
function eyeReader_BBCode($Text){
	global $checknum;

	// Replace any html brackets with HTML Entities to prevent executing HTML or script
	// Don't use strip_tags here because it breaks [url] search by replacing & with amp
	$Text = str_replace("<", "&lt;", $Text);
	$Text = str_replace(">", "&gt;", $Text);

	// Convert new line chars to html <br /> tags
	$Text = nl2br($Text);

	// Set up the parameters for a URL search string
	$URLSearchString = " a-zA-Z0-9\:\/\-\?\&\.\=\_\~\#\'";
	// Set up the parameters for a MAIL search string
	$MAILSearchString = $URLSearchString . " a-zA-Z0-9\.@";

	// Perform GOTO Search
	$Text = preg_replace("/\[goto\]([$URLSearchString]*)\[\/goto\]/", '<a href="#" onclick="sendMsg(\''.$checknum.'\',\'open\',\'$1\');">$1</a>', $Text);
	$Text = preg_replace("(\[goto\=([$URLSearchString]*)\](.+?)\[/goto\])", '<a href="#" onclick="sendMsg(\''.$checknum.'\',\'open\',\'$1\')">$2</a>', $Text);

	// Perform URL Search
	$Text = preg_replace("/\[url\]([$URLSearchString]*)\[\/url\]/", '<a href="$1" target="_blank">$1</a>', $Text);
	$Text = preg_replace("(\[url\=([$URLSearchString]*)\](.+?)\[/url\])", '<a href="$1" target="_blank">$2</a>', $Text);
         //$Text = preg_replace("(\[url\=([$URLSearchString]*)\]([$URLSearchString]*)\[/url\])", '<a href="$1" target="_blank">$2</a>', $Text);

	// Perform MAIL Search
	$Text = preg_replace("(\[mail\]([$MAILSearchString]*)\[/mail\])", '<a href="mailto:$1">$1</a>', $Text);
	$Text = preg_replace("/\[mail\=([$MAILSearchString]*)\](.+?)\[\/mail\]/", '<a href="mailto:$1">$2</a>', $Text);
         
	// Check for bold text
	$Text = preg_replace("(\[b\](.+?)\[\/b])is",'<span style="font-weight: bold;">$1</span>',$Text);

	// Check for Italics text
	$Text = preg_replace("(\[i\](.+?)\[\/i\])is",'<span style="font-style: italic;">$1</span>',$Text);

	// Check for Underline text
	$Text = preg_replace("(\[u\](.+?)\[\/u\])is",'<span style="text-decoration: underline;">$1</span>',$Text);

	// Check for strike-through text
	$Text = preg_replace("(\[s\](.+?)\[\/s\])is",'<span style="text-decoration: line-through;">$1</span>',$Text);

	// Check for over-line text
	$Text = preg_replace("(\[o\](.+?)\[\/o\])is",'<span style="text-decoration: overline;">$1</span>',$Text);

	// Check for header text (applies a h2 and then a hr)
	$Text = preg_replace("(\[h\](.+?)\[\/h\])is",'<h2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$1</h2><hr style="width:90%" />',$Text);

	// Check for colored text
	$Text = preg_replace("(\[color=(.+?)\](.+?)\[\/color\])is","<span style=\"color: $1\">$2</span>",$Text);

	// Check for sized text
	$Text = preg_replace("(\[size=(.+?)\](.+?)\[\/size\])is","<span style=\"font-size: $1px\">$2</span>",$Text);

	// Check for list text
	$Text = preg_replace("/\[list\](.+?)\[\/list\]/is", '<ul style="list-style-type: disc; list-style-position: inside;">$1</ul>' ,$Text);
	$Text = preg_replace("/\[list=1\](.+?)\[\/list\]/is", '<ul style="list-style-type: decimal; list-style-position: inside;">$1</ul>' ,$Text);
	$Text = preg_replace("/\[list=i\](.+?)\[\/list\]/s", '<ul style="list-style-type: lower-roman; list-style-position: inside;">$1</ul>' ,$Text);
	$Text = preg_replace("/\[list=I\](.+?)\[\/list\]/s", '<ul style="list-style-type: upper-roman; list-style-position: inside;">$1</ul>' ,$Text);
	$Text = preg_replace("/\[list=a\](.+?)\[\/list\]/s", '<ul style="list-style-type: lower-alpha; list-style-position: inside;">$1</ul>' ,$Text);
	$Text = preg_replace("/\[list=A\](.+?)\[\/list\]/s", '<ul style="list-style-type: upper-alpha; list-style-position: inside;">$1</ul>' ,$Text);
	$Text = str_replace("[*]", "<li>", $Text);

	// Check for font change text
	$Text = preg_replace("(\[font=(.+?)\](.+?)\[\/font\])","<span style=\"font-family: $1;\">$2</span>",$Text);

	// Declare the format for [code] layout
	$CodeLayout = '<table width="90%" border="0" align="center" cellpadding="0" cellspacing="0">
		<tr>
		<td style="font-family: Verdana, arial, helvetica, sans-serif; font-size: 12px; font-weight: bold;"> Code:</td>
		</tr>
	        <tr>
		<td style="background-color: #FFFFFF; font-family: Courier new, courier, mono; font-size: 12px; color: #006600; border: 1px solid #BFBFBF">$1</td>
		</tr>
		</table>';
	// Check for [code] text
	$Text = preg_replace("/\[code\](.+?)\[\/code\]/is","$CodeLayout", $Text);
	// Declare the format for [php] layout
	$phpLayout = '<table width="90%" border="0" align="center" cellpadding="0" cellspacing="0">
		<tr>
		<td style="font-family: Verdana, arial, helvetica, sans-serif; font-size: 12px; font-weight: bold;"> Code:</td>
		</tr>
		<tr>
		<td style="background-color: #FFFFFF; font-family: Courier new, courier, mono; font-size: 12px; color: #006600; border: 1px solid #BFBFBF;">$1</td>
		</tr>
		</table>';
	// Check for [php] text
	$Text = preg_replace("/\[php\](.+?)\[\/php\]/is",$phpLayout, $Text);

	// Declare the format for [quote] layout
	$QuoteLayout = '<table width="90%" border="0" align="center" cellpadding="0" cellspacing="0">
		<tr>
		<td style="font-family: Verdana, arial, helvetica, sans-serif; font-size: 12px; font-weight: bold;"> Quote:</td>
		</tr>
		<tr>
		<td style="background-color: #FFFFFF; font-family: Courier new, courier, mono; font-size: 12px; color: #006600; border: 1px solid #BFBFBF">$1</td>
		</tr>
		</table>';
	         
	// Check for [quote] text
	$Text = preg_replace("/\[quote\](.+?)\[\/quote\]/is","$QuoteLayout", $Text);
         
	// Images
	// [img]pathtoimage[/img]
	$Text = preg_replace("/\[img\](.+?)\[\/img\]/", '<img src="$1">', $Text);
         
	// [img=widthxheight]image source[/img]
	$Text = preg_replace("/\[img\=([0-9]*)x([0-9]*)\](.+?)\[\/img\]/", '<img src="$3" height="$2" width="$1">', $Text);
         
	return $Text;
}

function eyeReader_on_Restart(){
	global $myPid;
	proc('end');
	proc('launch',array('eyeReader'));
}

function eyeReader_on_Close(){
	global $myPid;
	proc('end');
}

?>
